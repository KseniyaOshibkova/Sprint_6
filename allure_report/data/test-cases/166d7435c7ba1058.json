{"uid":"166d7435c7ba1058","name":"Ответы на вопросы в разделе \"Вопросы о важном\"","fullName":"tests.test_questions_about_important.TestQuestionsAboutImportant#test_faq_answer","historyId":"6104a8eadf6b8d83767c17e0241bf7f5","time":{"start":1755867247480,"stop":1755867247495,"duration":15},"description":"Проверяем соответствие ответов вопросам","descriptionHtml":"<p>Проверяем соответствие ответов вопросам</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-2\" class=\"accordion__button\"> is not clickable at point (966,449) because another element <img src=\"/assets/scooter.png\"> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:175:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:134:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:31","statusTrace":"self = <test_questions_about_important.TestQuestionsAboutImportant object at 0x00000286A6E5E650>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"bbca9421-d538-46b4-96d2-435ab3f5b5c1\")>\nquestions_about_important_page = <pages.questions_about_important_page.QuestionsAboutImportantPage object at 0x00000286A6E63ED0>\ntest_data = {'expected_answer': 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени а...езли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.', 'question': 'Как рассчитывается время аренды?'}\n\n    @allure.title('Ответы на вопросы в разделе \"Вопросы о важном\"')\n    @allure.description('Проверяем соответствие ответов вопросам')\n    @pytest.mark.parametrize(\"test_data\",DataForQuestions.FAQ_TEST_DATA)\n    def test_faq_answer(self, driver, questions_about_important_page, test_data):\n        with allure.step('Открыть ответ на вопрос и проверить содержание'):\n>           questions_about_important_page.check_answer(\n            question_text=test_data[\"question\"],\n            expected_answer=test_data[\"expected_answer\"])\n\ntests\\test_questions_about_important.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\questions_about_important_page.py:40: in check_answer\n    actual_answer = self.get_answer(question_text)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\questions_about_important_page.py:27: in get_answer\n    question_button.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000286A6FA0850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div id=\\\\\"accordion__headi...\"accordion__heading-2\\\\\" class=\\\\\"accordion__button\\\\\">\",\"overlayingElement\":\"<img src=\\\\\"/assets/scooter.png\\\\\">\"}}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-2\" class=\"accordion__button\"> is not clickable at point (966,449) because another element <img src=\"/assets/scooter.png\"> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:175:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:134:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:31\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1755867241802,"stop":1755867247479,"duration":5677},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"questions_about_important_page","time":{"start":1755867247479,"stop":1755867247480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"description":"Проверяем соответствие ответов вопросам","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-2\" class=\"accordion__button\"> is not clickable at point (966,449) because another element <img src=\"/assets/scooter.png\"> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:175:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:134:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:31","statusTrace":"self = <test_questions_about_important.TestQuestionsAboutImportant object at 0x00000286A6E5E650>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"bbca9421-d538-46b4-96d2-435ab3f5b5c1\")>\nquestions_about_important_page = <pages.questions_about_important_page.QuestionsAboutImportantPage object at 0x00000286A6E63ED0>\ntest_data = {'expected_answer': 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени а...езли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.', 'question': 'Как рассчитывается время аренды?'}\n\n    @allure.title('Ответы на вопросы в разделе \"Вопросы о важном\"')\n    @allure.description('Проверяем соответствие ответов вопросам')\n    @pytest.mark.parametrize(\"test_data\",DataForQuestions.FAQ_TEST_DATA)\n    def test_faq_answer(self, driver, questions_about_important_page, test_data):\n        with allure.step('Открыть ответ на вопрос и проверить содержание'):\n>           questions_about_important_page.check_answer(\n            question_text=test_data[\"question\"],\n            expected_answer=test_data[\"expected_answer\"])\n\ntests\\test_questions_about_important.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\questions_about_important_page.py:40: in check_answer\n    actual_answer = self.get_answer(question_text)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\questions_about_important_page.py:27: in get_answer\n    question_button.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000286A6FA0850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div id=\\\\\"accordion__headi...\"accordion__heading-2\\\\\" class=\\\\\"accordion__button\\\\\">\",\"overlayingElement\":\"<img src=\\\\\"/assets/scooter.png\\\\\">\"}}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-2\" class=\"accordion__button\"> is not clickable at point (966,449) because another element <img src=\"/assets/scooter.png\"> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:175:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:134:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:31\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Открыть ответ на вопрос и проверить содержание","time":{"start":1755867247480,"stop":1755867247492,"duration":12},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-2\" class=\"accordion__button\"> is not clickable at point (966,449) because another element <img src=\"/assets/scooter.png\"> obscures it; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:175:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:134:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:327:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:31\n\n","statusTrace":"  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\tests\\test_questions_about_important.py\", line 16, in test_faq_answer\n    questions_about_important_page.check_answer(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n    question_text=test_data[\"question\"],\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    expected_answer=test_data[\"expected_answer\"])\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\pages\\questions_about_important_page.py\", line 40, in check_answer\n    actual_answer = self.get_answer(question_text)\n  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\pages\\questions_about_important_page.py\", line 27, in get_answer\n    question_button.click()\n    ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 120, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 573, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\rokst\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1755867247588,"stop":1755867250122,"duration":2534},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_questions_about_important"},{"name":"subSuite","value":"TestQuestionsAboutImportant"},{"name":"host","value":"Ksu"},{"name":"thread","value":"13132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_questions_about_important"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_data","value":"{'question': 'Как рассчитывается время аренды?', 'expected_answer': 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"166d7435c7ba1058.json","parameterValues":["{'question': 'Как рассчитывается время аренды?', 'expected_answer': 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.'}"]}